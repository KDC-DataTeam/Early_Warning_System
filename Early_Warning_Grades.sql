DROP TABLE CUSTOM.CUSTOM_EARLY_WARNING_GRADES

CREATE TABLE CUSTOM.CUSTOM_EARLY_WARNING_GRADES (
STUDENT_NUMBER INT,
STUDENTID INT,
STUDENTKEY INT,
SYSTEMSTUDENTID VARCHAR(25),
TERMKEY INT,
NUM_Ds_AND_Fs INT);

CREATE INDEX EW_GRADES ON CUSTOM.CUSTOM_EARLY_WARNING_GRADES (STUDENT_NUMBER,TERMKEY);

INSERT INTO CUSTOM.CUSTOM_EARLY_WARNING_GRADES (STUDENT_NUMBER,STUDENTID,STUDENTKEY,SYSTEMSTUDENTID,TERMKEY,NUM_Ds_AND_Fs)
SELECT
SB.STUDENT_NUMBER AS STUDENT_NUMBER,
PS.ID AS STUDENTID,
DW_DIMSTUDENT.STUDENTKEY AS STUDENTKEY,
DW_DIMSTUDENT.SYSTEMSTUDENTID AS SYSTEMSTUDENTID,
COALESCE(CAST(CAST(GT.ID AS VARCHAR) + [DW_DIMSCHOOL].SYSTEMSCHOOLID AS INT),-1) AS 'TERMKEY',
SUM(CASE WHEN (GRADENAME LIKE 'D%' OR GRADENAME = 'F') THEN 1 ELSE 0 END) '# Ds AND Fs'
FROM [DW].[DW_FACTGRADESCORES] [DW_FACTGRADESCORES]
INNER JOIN [DW].[DW_DIMGRADE] [DW_DIMGRADE] ON ([DW_FACTGRADESCORES].[GRADEKEY] = [DW_DIMGRADE].[GRADEKEY])
INNER JOIN [DW].[DW_DIMCOURSE] [DW_DIMCOURSE] ON ([DW_FACTGRADESCORES].[COURSEKEY] = [DW_DIMCOURSE].[COURSEKEY])
INNER JOIN [DW].[DW_DIMSTUDENT] [DW_DIMSTUDENT] ON ([DW_FACTGRADESCORES].[STUDENTKEY] = [DW_DIMSTUDENT].[STUDENTKEY])
INNER JOIN [custom].[custom_StudentBridge] SB ON SB.SYSTEMSTUDENTID = DW_DIMSTUDENT.SYSTEMSTUDENTID
INNER JOIN POWERSCHOOL.POWERSCHOOL_STUDENTS PS ON PS.STUDENT_NUMBER = SB.STUDENT_NUMBER
INNER JOIN [DW].[DW_DIMSCHOOL] [DW_DIMSCHOOL] ON ([DW_FACTGRADESCORES].[SCHOOLKEY] = [DW_DIMSCHOOL].[SCHOOLKEY])-- AND [DW_DIMSCHOOL].SYSTEMSCHOOLID != '-----')
INNER JOIN [DW].[DW_DIMSTUDENTHISTORICAL] [DW_DIMSTUDENTHISTORICAL] ON ([DW_FACTGRADESCORES].[STUDENTHISTORICALKEY] = [DW_DIMSTUDENTHISTORICAL].[STUDENTHISTORICALKEY]) 
INNER JOIN [DW].[DW_DIMSCHOOLHISTORICAL] [DW_DIMSCHOOLHISTORICAL] ON ([DW_FACTGRADESCORES].[SCHOOLHISTORICALKEY] = [DW_DIMSCHOOLHISTORICAL].[SCHOOLHISTORICALKEY] AND [DW_DIMSCHOOLHISTORICAL].SYSTEMSCHOOLID != '-----')
INNER JOIN [DW].[DW_DIMSCHOOLCALENDAR] [TERMEND_DIMSCHOOLCALENDAR] ON ([DW_FACTGRADESCORES].[GRADETERMENDSCHOOLCALENDARKEY] = [TERMEND_DIMSCHOOLCALENDAR].[SCHOOLCALENDARKEY])
LEFT JOIN custom.custom_term_conversions GT ON GT.SCHOOLID =  CAST([DW_DIMSCHOOLHISTORICAL].SYSTEMSCHOOLID AS INT) AND GT.FINALGRADENAME = GRADEPERIOD AND RIGHT(SCHOOLYEAR4DIGIT,2)+9 = GT.YEARID
WHERE (([DW_DIMSTUDENTHISTORICAL].GRADELEVEL_NUMERIC >= 9 
AND [DW_DIMCOURSE].SUBJECTAREA IN ('ELA', 'HIST', 'MATH', 'SCIENCE','FLANG')) -- STUDENT IN GRADE 9 OR HIGHER AND HS CORE CREDIT TYPES
OR ([DW_DIMSTUDENTHISTORICAL].GRADELEVEL_NUMERIC < 9 AND (COURSENAME LIKE '%Math'
                                                       OR COURSENAME LIKE '%Reading' 
                                                       OR COURSENAME LIKE '%Science' 
                                                       OR COURSENAME LIKE '%Social Studies' 
                                                       OR COURSENAME LIKE '%Science and Social Studies' 
                                                       OR COURSENAME LIKE 'Algebra I'
                                                       OR COURSENAME LIKE '%English')))
AND GRADESCORETYPE = 'Overall'
--AND RIGHT(SCHOOLYEAR4DIGIT,2)+9 = 25
GROUP BY SB.STUDENT_NUMBER
		,DW_DIMSTUDENT.SYSTEMSTUDENTID
		,SCHOOLYEAR4DIGIT
		,GT.ID
		,PS.ID
		,DW_DIMSTUDENT.StudentKEY
		,[DW_DIMSCHOOL].SYSTEMSCHOOLID
